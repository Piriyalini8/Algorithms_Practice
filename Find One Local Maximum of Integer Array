You need to get array of numbers as run time input. 
You need to return the value and an index to a “local maximum”.

element, which is defined as an element that is greater than both its adjacent elements. 
In the case of the array edges, the condition is reduced to one adjacent element. 
If there are multiple “local maxima”, returning any one of them is fine.


case 01- Check from start to end
(Worst case No of check=n-1)

package findonelocalmaximum;
import java.util.Scanner;

public class FindOneLocalMaximum {
    public static void main(String[] args) {
        int max;
        int currentLength=0;
        int[] num;
        int maxNumbers;
        Scanner sc=new Scanner(System.in);
        
        //get maximum length of array
        System.out.print("Number of integers you like to insert: ");
        maxNumbers = sc.nextInt();
        //initialize an array
        num=new int[maxNumbers];
        
        
        //take input array values
        for(int i=0;i<maxNumbers;i++){
            System.out.println("Enter number: "+(i+1));
            num[i]=sc.nextInt();
            currentLength++;
        }
        
        //Find local maximum
        for(int i=0;i<maxNumbers;i++){
            if(i==0){
                //First element is Maximum
                if(num[i]>num[i+1]){
                    System.out.println("Local Maximum from start: "+num[i]);
                    System.out.println("Index of local maximum: "+i);
                    break;
                }
            }
            else{
                //Last element is Maximum
                if((i+1)==maxNumbers){
                if(num[i]>num[i-1]){
                    System.out.println("Local Maximum from start: "+num[i]);
                    System.out.println("Index of local maximum: "+i);
                    break;
                }
            }
                else{
                    if(num[i]>num[i-1]&&num[i]>num[i+1]){
                      System.out.println("Local Maximum from start: "+num[i]);
                      System.out.println("Index of local maximum: "+i);
                      break;  
                    }
                }
            }  
        }
    }
}
